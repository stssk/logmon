name: Build and Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Build
      run: |
        mkdir -p build/${{ matrix.goos }}-${{ matrix.goarch }}
        if [ "${{ matrix.goos }}" == "windows" ]; then
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/${{ matrix.goos }}-${{ matrix.goarch }}/logmon.exe
        else
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/${{ matrix.goos }}-${{ matrix.goarch }}/logmon
        fi

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: |
          build/${{ matrix.goos }}-${{ matrix.goarch }}/logmon*
        asset_name: |
          logmon-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.goos == 'windows' && 'logmon.exe' || 'logmon' }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}